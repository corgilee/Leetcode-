class Solution:
    """
    @param: A: An integer array
    @param: B: An integer array
    @return: a double whose format is *.5 or *.0
    """
    def findMedianSortedArrays(self, A, B):
        # write your code here
        n=len(A)+len(B)
        if n%2==1:
            return self.findkth(A,B,(n+1)//2)
        else:
            left=self.findkth(A,B,n//2)
            right=self.findkth(A,B,n//2+1)
            return (left+right)/2
            
    def findkth(self, A,B,k):
        if len(A)==0:
            return B[k-1]
        if len(B)==0:
            return A[k-1]
        if k==1:
            return min(A[0],B[0])
            
        a=A[k//2-1] if len(A)>=k//2 else None
        b=B[k//2-1] if len(B)>=k//2 else None
        
        if b is None or (a is not None and a<b):
            return self.findkth(A[k//2:],B,k-k//2)
        return self.findkth(A,B[k//2:],k-k//2)
